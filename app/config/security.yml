# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\PrivilegeBundle\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN]

    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        main:
            entity:
                class:    App\PrivilegeBundle\Entity\User
                property : username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: true
            provider: main
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path:       logout
                target:     login
        secured_area:
            form_login:
                csrf_token_generator: security.csrf.token_manager

    access_control:
    #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }


#
#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        main:
#            pattern:      ^/
#            anonymous:    true
#            provider: in_memory
#            form_login:
#                login_path: login
#                check_path: login_check
#            logout:
#                path:       logout
#                target:     login
#
#    access_control:
#            #        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#            #        - { path: ^/, roles: ROLE_ADMIN }
#            #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
